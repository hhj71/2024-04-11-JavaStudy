/*
 *  프로그램
 *   1) 데이터를 저장 (변수/상수)
 *   2) 사용자 요청에 맞게 가공
 *       연산자 / 제어문
 *      
 *  - 연산자
 *     1)단항연산자 
 *        => 증감연산자 (++,--) : 1증가/1감소 => 반복문에 자주 쓰임
 *        => 부정연산자 (!) : true → false / false → true => 조건문에 자주 쓰임
 *        => 형변환연산자 (데이터형) : 필요시에 형을 변경해서 사용
 *                             -> 숫자에서만 사용가능 (boolean은 포함하지 않는다.)
 *               => 클래스 형변환                    
 *        
 *     2)이항연산자
 *         => 산술연산자 (+ , - , * , / , %)
 *             - + : 산술기능/ 문자열결합
 *                     ====================
 *                     char + char = int
 *                     byte + char = int
 *                     byte + byte = int
 *                     ====================
 *                     int + int = int
 *                     int + long = long
 *                     long + double = double
 *                     ========================
 *                     문자열이 있으면 결과값은 문자열이다.
 *                     ex) "7"+10.5 = "710.5"
 *                         "7"+true = "7true"
 *             - / 
 *                1) 0으로 나눌 수 없다 -> 오류 발생
 *                2) 정수/정수 = 정수
 *             - % : 나누고 나머지 값 => 배수 구할 때 쓰임
 *                   1) 결과값의 부호는 왼쪽 부호에 따라 다르다. 
 *                      5%2   =  1                                                               5/2 = 2
 *                      5%-2  =  1                                                               5/-2 = -2
 *                      -5%2  = -1                      헷갈리면 안됨!!                              -5/2 = -2
 *                      -5%-2 = -1            나누기 등 다른 부호들을 일반적으로 부호 결정됨.                 -5/-2 = 2     
 *                     
 *         => 비교연산자 (==, !=, <, >, <=, >=)
 *               - 숫자(정수, 실수)와 문자 비교할 때 사용
 *               - boolean은 ==, != 만 사용 가능
 *               - 모든 결과값이 true / false => 조건문에 쓰임
 *               - 문자열은 비교할 수 없다!
 *               
 *         => 논리연산자 (&&, ||) : 조건문이나 반복문에 사용
 *               - 범위나 기간에 포함 될 때 -> && (이고) / ~부터 ~까지 
 *               - 범위나 기간을 벗어난 경우 -> || (이거나)          
 *         
 *                  -----------------------------------
 *                                 &&             ||
 *                  -----------------------------------
 *                   true true     true          true
 *                  -----------------------------------
 *                   true false    false         true
 *                  -----------------------------------
 *                   false true    false         true
 *                   -----------------------------------
 *                   false false   false         false
 *                   -----------------------------------
 *        
 *         => 대입연산자 (=, +=, -=) : 누적할 때, 크롤링할 때 많이 사용
 *             오른쪽을 왼쪽에 대입한다. 
 *            - += : 여러개를 증가
 *            - -= : 여러개를 감소
 *               
 *     3)삼항연산자
 * 
 */
public class 연산자_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
