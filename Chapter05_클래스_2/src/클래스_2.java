/*
 *  1. => 114 page
 *     객체 => 변수(여러개의 변수/ 여러개의 메소드) 동시에 관리하는 영역
 *     --- 설계 => 영역 class
 *     --- 동시에 관리를 위해서는 저장 => new
 *     
 *  2. 115 page
 *       학생
 *        학번 이름 학교명 성별 주소 전화 ....   => 변수
 *        ------- ----  -----------
 *                  |한개의 이름만 가지고 있다 => static
 *           |               |
 *           -----------------
 *                  | 학생마다 따로 가지고 있는 변수 => new 따로 저장하는 공간을 만들어준다
 *           => 명시적 => 변수
 *           => 동사적 => 메소드 : 점심을 먹는다, 시험본다, 게임을 한다 .... (동작)
 *           
 *           변수/ 변수를 활용하는 메소드 => 클래스 => 관리 (객체)
 *           => 예)
 *               시계
 *               시침/분침/초침
 *               계산기
 *               첫번째 변수/ 두번째 변수/ 연산자
 *               
 *           => *** 객체란 현실세계/비현실세계를 특성화 시킨 것이다.(기술면접 100%) => 5번정도 기회 
 *                                     ---- 
 *                                      추상화, 단순화 
 *           
 *           벤치 마킹 (사이트 결정) ===> 분석 (명사적,  동사적) ==========> 클래스 설계
 *                                           |      |                 필요한 데이터(변수), 사용자 행위(메소드)
 *                                          출력물  클릭 / 메뉴선택             |
 *                                                                     공통으로 사용되는 변수
 *                                                                     따로 사용되는 변수 
 *       = 클래스명 
 *          -> 변수 식별자와 동일한 명명 규칙을 가지고 있다
 *             ** 특수문자 _.$ 사용가능 => (_를 많이 사용 => 단어 2개인 경우, 임시 클래스)
 *             ** 약속 -> 한글은 가급적이면 사용하지 않는다 (한글은 운영체제에 따라 다르다) => 알파벳 사용 권장
 *                            => 만약 한글로 클래스명을 지었다면 -> aws에 호스팅 했을때 한글이 깨져서 실행이 안된다.
 *             ** 클래스명은 시작 첫 문자를 알파벳 대문자로 해야한다! (소문자로 하면 변수하고 충돌할 수 도 있음)
 *             ** 같은 폴더에서는 같은 이름의 클래스명을 설정할 수 없다.
 *             ** 한개의 파일(.java)에 여러개의 클래스를 만들 수 있다.
 *                          
 *             ** 코딩할 때 주의해야 할 점 : 클래스명 잘못 설정, 변수가 없는데 호출, 들여쓰기
 *             ----------------------------------------------------------------
 *        - 클래스의 형태
 *             => 데이터형 클래스 ( ~VO(Spring) , ~DTO(MyBatis) , ~Bean(JSP) ) 
 *                    -> 변수만 설정 -> 사용자 정의 데이터형 
 *                    
 *             => 액션 클래스  (~DAO , ~Manager , ~controller(요청=>응답) )    
 *                    -> 메소드 설정 -> 기능만 처리
 *       117~118 page                     
 *       class ClassName
 *       {
 *        	 *** 멤버변수 
 *                  1) new => 저장 => 따로 메모리 생성  => 인스턴스 변수
 *                  2) 컴파일 시 저장 => 한개의 메모리 생성 => 정적변수 (앞에 static 붙임)
 *           *** 초기화 방법 
 *                인스턴스 변수 : {} , 생성자
 *                static 변수 : static{} , 생성자 => 자동저장이 가능하기 때문에 생성자를 이용하지 않는다
 *           *** 변수활용 => 메소드             
 *       }
 * 
 */
public class 클래스_2 {

}
