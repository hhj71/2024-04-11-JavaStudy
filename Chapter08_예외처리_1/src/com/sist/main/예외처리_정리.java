package com.sist.main;
/*
 * 	예외처리
 * 		= 정의: 사전에 에러를 방지하는 프로그램  => 견고성
 * 		= 목적: 비정상종료를 방지하고 정상상태를 유지한다
 * 	=> 종류
 * 	   ★직접 처리 : 예외가 발생했을 때 복구
 * 								--- 복구하는 위치 catch 블록
 *  	        -> try ~ catch ~ finally
 *     ★간접 처리 : 예외가 발생했을때 회피 / 예외처리 없이 피해간다
 *  			-> throws
 *      임의 발생 : 에러가 없는데 임의로 발생시킴 => 테스트
 *      		-> throw
 *      사용자 정의 : 자바에서 지원하지 않는 예외처리를 직접 만들어서 처리
 *      		-> Exception을 상속받아서 처리 => 사용빈도는 거의 없다
 *      
 *  	1. try ~ catch
 *  		try
 * 		{
 * 			정상수행하는 문장 => 프로그램 수행중에 오류 발생할 수 있다
 * 						=> 프로그래머의 실수, 사용자 입력 문제일때 일단 조건문 실행하기 
 * 		}catch(예외처리클래스)
 * 		{
 *        	=> try 수행중에 에러가 발생시 처리하는 영역
 * 		}catch(예외처리클래스)
 *      {
 *      	
 *      } => catch는 여러개 사용이 가능 => 예상되는 에러를 따로 설정 => 한개로 처리도 가능
 *      														------------- 상속도
 *      finally => 생략이 가능 (필요시에만 사용) // 정상, 에러처리와 관계없이 무조건 실행된다
 *      { 
 *      }
 *			
 */
public class 예외처리_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
