/*
 * !!!!!!반드시 알아야 하는 것들!!!!!!!
 * 
 * 1. 변수/상수 
 * - 변수는 한개의 데이터를 저장하는 메모리 공간의 이름 => 변경할 수 있다. / 제일 먼저 해야하는 건 메모리 공간 크기 설정./ 기본 저장 크기를 제공(기본 데이터형)
 *     => 외부에서 계속 변경되는 데이터를 찾는다.
 *        데이터형 변수 = 값
 * - 상수는 한개의 데이터를 저장하는 메모리 공간의 이름 => 변경할 수 없다. 
 *     => final 데이터형 변수 = 값 / 모든 상수명은 대문자로 되어 있다. 
 *        ex) (네트워크의 경우) IP
 * 2. 변수/상수 선언
 *    => 데이터형 변수명;
 *    => final 데이터형 상수명; => 오류 발생
 *       └> final 데이터형 상수명 = 값; => 상수는 무조건 값을 지정해둬야 함.
 * 3. 데이터형 (기본형) => 저장범위, 메모리 크기(1,2,4,8byte)
 * -------------------------------------------------------------
 * 정수형
 * 	byte : 1byte (-128~127) => 네트워크 전송, 외부데이터 읽기(크롤링) 할 때 주로 사용
 *          - byte는 연산처리가 되면 결과값은 int (byte + byte = int)
 * 	int  : 4byte (-21억 4천 ~ 21억 4천) => 컴퓨터에서 모든 정수는 int로 인식 / 가장 많이 사용되는 정수형 / 웹에서 숫자가 나오면 무조건 int 
 *         ex) 회원정보에서 나이 -> int age / 게시판 게시물 번호 -> int bno, 조회수 -> int hit
 * 	long : 8byte => [최근에 많이 사용 -> 빅데이터 -> AI] / 구분자는 L,l
 *          ex) 파일 크기 같이 큰 숫자에 사용
 * -------------------------------------------------------------
 * 실수형
 * 	double : 8byte  => 평균치, 평점 계산할때 많이 사용.../ 모든 실수는 컴퓨터에서 double로 인식/ 소수점 15자리 수 까지 인식
 *                      연산처리가 될 때 연산은 같은 데이터형 끼리만 연산이 가능함.
 *                       ex) 10+10.5 -> 10.0+10.5 -> 20.5
 * -------------------------------------------------------------
 * 문자형
 * 	char : 2byte (0~65535) => 문자 1개 저장 -> ' ' / 각 국의 언어 사용, 표현이 가능 (Unicode) -> 호환성 좋음/ 음수가 없다.
 *                            연산처리시에는 정수형으로 변경이 된다. 값은 문자'', 정수값 사용이 가능하다.
 *                            
 *                            ex) 'A'+1 -> 65+1 -> 66
 *                            
 * -------------------------------------------------------------
 * 논리형
 * 	boolean : 1byte (1: true, 0: false) => 조건이 있는 경우에 사용
 *            => 크기는 비교할 수 없다. 
 *            => 기본 연산이 안된다. (ex) 부정연산자, 비교연산자, 논리연산자, 삼항연산자 
 *         ex) boolean bCheck = false;      
 * -------------------------------------------------------------
 * 
 * 4. 선언방법 & 초기화
 *  
 *  - 방법2가지
 *  
 *  1) 우리가 값을 알고 있는 경우 주로 사용
 *     byte b = 10; => 선언+초기값
 *     
 *  2) 사용자로부터 입력값을 받는 경우 주로 사용
 *  	byte b; => 선언
 *    	b=20; => 초기값
 *  3) 여러개가 있는 경우 (같은 데이터형 일때)
 *     int a=10,b=20,c=30; => 선언&초기화  
 * 
 * 5. 변수의 명칭
 *    1) 알파벳(대소문자 구분해야 함), 한글로 시작한다.
 *    2) 숫자 사용가능 (앞에 사용금지)
 *    3) 키워드는 사용 불가
 *    4) 특수문자 2가지(_,$) 사용가능
 *    5) 공백은 허용하지 않음 
 *    
 * 6. 데이터의 크기
 *    byte<char<int<long<double
 *    boolean은 크기에 제외됨
 *    
 * 7. 데이터의 교환
 *    - 데이터의 교환은 반드시 임시변수[ex)temp] 설정 필요
 *
 * ============================================================================
 * *** 변수에 값을 대입할 때는 
 *     byte b = 값(byte)
 *     char c = 값(char, int 값 대입 가능)
 *     int i = byte, char, int 값 
 *     long l = byte, char, int, long 값 
 *     double d = byte, char, int, long, double 값  
 *    ----------------------------------------------> 작은 데이터형을 대입을 하면 자동으로 변경됨(자동 형변환)
 *    ex) char c = 65 ==> c='A'
 *        int a = 'A' ==> a = 65
 *        long a = 10 ==> a = 10L
 *        double a = 'A' ==> a = 65.0
 *   =========================================================================== 2장 37페이지까지의 내용 
 *  
 *     
 *  
 * 
 * 
 * 
 */
public class 변수_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		System.out.println(Byte.MAX_VALUE); // 상수(대문자)
		System.out.println(Byte.MIN_VALUE); // 상수(대문자)

		
		
		
		
		
	}

}
