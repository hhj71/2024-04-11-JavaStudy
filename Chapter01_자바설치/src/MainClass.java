/*
 *  여러줄 주석
 *  
 *  책 2page 
 *   
 *    자바언어의 특징
 *    1) 프로그램 언어 실행하는 방식
 *        = 컴파일 방식 => 컴퓨터가 인식하는 언어로 변경 (2진파일 => 0,1)
 *          ex) class MainClass{
 *                  public static void main(String[] args){
 *                  }
 *                }
 *              
 *                └> 010010010
 *                   001011001
 *                   000110111
 *                   
 *               'A' => 65 => 1000001
 *  				-> 프로그램언어 -> 컴파일 방식을 이용
 *                     ex) C/C++, C#, Java(자바의 목표는 one write)
 *               = 인터프리터 방식 : 한줄 씩 번역해서 처리
 *                  HTML/CSS
 *               => 자바는 컴파일 / 인터프리터를 동시에 사용 => 보안이 뛰어남 (소스 검증)
 *               -------------------
 *               제임스 고슬링의 말 " 자바언어는 절대 보안 노출되지 않는다." but 보안 뚫린적 있음.
 *           
 *      자바소스(.java)
 *        |   
 *       JVM이 있음 => .class 번역함 
 *        |
 *   ---------------------------
 *    |    |      |     |     |          
 *  리눅스  유닉스 솔라리스  MAC Windows => 동일한 실행결과
 *  =================================================
 *  
 *  java ==> class
 *  -실행과정
 *  	A.java 파일 만들기 
 *   		| javac
 *  	A.class 생성
 *    		|java
 *  	실행 결과 
 *  
 *   
 *  책 6page 
 *   개발환경 구축
 *  1) JDK => 17버전 => jdk17.0.2 =>jdk.java.net/14 에서 설치파일 다운로드 가능
 *      * 높은 버전에서는 실행 가능 but 낮은 버전에서는 실행이 안됨.
 *      * 보통 실무는 jdk1.8 ver (SUN의 마지막 버전) 사용 => 호환성이 좋다.
 *      * Spring-Boot : 17이상
 *        SpringFramework : 14이하
 *     - 단점: 오픈소스를 이용하기 때문에 호환성을 맞추기 어려움.
 *  2) 환경설정 
 *    => classpath : 라이브러리 읽기 위해서 => .;c:\jdk-17.0.2\lib
 *    => path : 실행 파일 등록 위해서 => c:\jdk-17.0.2\bin
 *  
 *  책 11page
 *   3) 편집기 - eclipse => eclipse.org => 최신버전 다운로드
 *                └> Back-end 용           
 *           - 인텔리제이 
 *               └> FullStack 용
 * 
 *  eclipse 시작 -> (Java)project 만들기 -> src에 자바 클래스 생성
 *  ----------------------------------------------------------------------------------------------------------------
 *              주의점) 1. 파일명과 클래스 명이 동일해야 한다.
 *                    2. 대소문자를 구분해야 한다.
 *                    3. 명령문(CPU)이 끝나면 반드시 ; 써줘야 한다.
 *                    4. 클래스 이름은 영문외에 한글도 사용가능하다. but 한글 사용시 리눅스와 같은 다른 운영체제에서는 인식이 안될 때도 있음. 
 *                         (따라서 영문이름을 권장한다.)
 * -----------------------------------------------------------------------------------------------------------------                        
 *       ! 문법은 아니고 약속 사항
 *         1) 클래스 명은 대문자로 시작한다. ex)MainClass
 *         2) 변수 : 소문자로 시작한다.  ex) id, password       
 *         3) 상수 : 모든 단어를 대문자로 한다. ex) ID, PASSWORD
 *         4) 메소드 : 소문자 시작    
 * -----------------------------------------------------------------------------------------------------------------
 *    모든 자바파일 실행시에는 반드시 main()이 있어야 한다.
 *                             └> 실행 시작점 / 종료점
 *    주석 : ctrl+shift+/ - 적용시킬 때
 *          ctrl+shift+\ - 해제 할 때 
 * ----------------------------------------------------------------------------------------------------------------
 * 자바의 구성요소 
 *     class className => 클래스 시작 
 *     {
 *       public static void main(String[] args){
 *       	}
 *       }
 *       
 *               객체지향 프로그램 (5장)
 * ------------------class----------------------              
 * 
 * ---------------------------------------------
 *    => 변수
 * ---------------------------------------------
 *    => 생성자
 * ---------------------------------------------
 *    => 메소드
 * ---------------------------------------------
 * 
 * ---------------------------------------------
 *               
 *               
 *               
 *               
 *               
 *               
 *               
 *               
 *               
 */



public class MainClass {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        System.out.println('A');
        System.out.println((int)'A');
        System.out.println(Integer.toBinaryString(65));
        System.out.println("홍");
        System.out.println(Integer.toBinaryString());
		
		
		
	}

}
